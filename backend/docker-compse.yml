version: '3'

services:
  n8n-ai-assistant-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: n8n-ai-assistant-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend:/app
    environment:
      - DEFAULT_POSTGRES_CONNECTION=${POSTGRES_CONNECTION_STRING}
      - DEFAULT_DOCKER_HOST=unix:///var/run/docker.sock
      - COMMAND_TIMEOUT=30
      - MAX_RESULTS=1000
      - FLASK_DEBUG=0
    networks:
      - n8n-ai-network
    depends_on:
      - postgres

  postgres:
    image: postgres:14
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8npassword}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - n8n-ai-network

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8npassword}
    volumes:
      - n8n-data:/home/node/.n8n
    networks:
      - n8n-ai-network
    depends_on:
      - postgres

networks:
  n8n-ai-network:
    driver: bridge

volumes:
  postgres-data:
  n8n-data: